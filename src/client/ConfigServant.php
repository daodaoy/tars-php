<?php

/**
 * NOTE: This class is auto generated by Tars Generator (https://github.com/wenbinye/tars-generator).
 *
 * Do not edit the class manually.
 * Tars Generator version: 1.0-SNAPSHOT
 */

namespace wenbinye\tars\client;

use wenbinye\tars\protocol\annotation\TarsClient;
use wenbinye\tars\protocol\annotation\TarsParameter;
use wenbinye\tars\protocol\annotation\TarsReturnType;

/**
 * @TarsClient(name="tars.tarsconfig.ConfigObj")
 */
interface ConfigServant
{
    /**
     * @TarsParameter(name = "app", type = "string")
     * @TarsParameter(name = "server", type = "string")
     * @TarsParameter(name = "vf", type = "vector<string>", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param string $app
     * @param string $server
     * @param array $vf
     * @return int
     */
    public function ListConfig($app, $server, &$vf);

    /**
     * @TarsParameter(name = "app", type = "string")
     * @TarsParameter(name = "server", type = "string")
     * @TarsParameter(name = "filename", type = "string")
     * @TarsParameter(name = "config", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param string $app
     * @param string $server
     * @param string $filename
     * @param string $config
     * @return int
     */
    public function loadConfig($app, $server, $filename, &$config);

    /**
     * @TarsParameter(name = "appServerName", type = "string")
     * @TarsParameter(name = "filename", type = "string")
     * @TarsParameter(name = "host", type = "string")
     * @TarsParameter(name = "config", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param string $appServerName
     * @param string $filename
     * @param string $host
     * @param string $config
     * @return int
     */
    public function loadConfigByHost($appServerName, $filename, $host, &$config);

    /**
     * @TarsParameter(name = "appServerName", type = "string")
     * @TarsParameter(name = "filename", type = "string")
     * @TarsParameter(name = "host", type = "string")
     * @TarsParameter(name = "result", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param string $appServerName
     * @param string $filename
     * @param string $host
     * @param string $result
     * @return int
     */
    public function checkConfig($appServerName, $filename, $host, &$result);

    /**
     * @TarsParameter(name = "configInfo", type = "ConfigInfo")
     * @TarsParameter(name = "vf", type = "vector<string>", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param \wenbinye\tars\client\ConfigInfo $configInfo
     * @param array $vf
     * @return int
     */
    public function ListConfigByInfo($configInfo, &$vf);

    /**
     * @TarsParameter(name = "configInfo", type = "ConfigInfo")
     * @TarsParameter(name = "config", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param \wenbinye\tars\client\ConfigInfo $configInfo
     * @param string $config
     * @return int
     */
    public function loadConfigByInfo($configInfo, &$config);

    /**
     * @TarsParameter(name = "configInfo", type = "ConfigInfo")
     * @TarsParameter(name = "result", type = "string", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param \wenbinye\tars\client\ConfigInfo $configInfo
     * @param string $result
     * @return int
     */
    public function checkConfigByInfo($configInfo, &$result);

    /**
     * @TarsParameter(name = "configInfo", type = "GetConfigListInfo")
     * @TarsParameter(name = "vf", type = "vector<string>", out=true)
     * @TarsReturnType(type = "int")
     *
     * @param \wenbinye\tars\client\GetConfigListInfo $configInfo
     * @param array $vf
     * @return int
     */
    public function ListAllConfigByInfo($configInfo, &$vf);

}
